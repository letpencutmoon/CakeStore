@using System.ComponentModel.DataAnnotations
@inject IAuthService authservice

<EditForm Model="user" OnValidSubmit="HandleRegistration">
<DataAnnotationsValidator/>

<div class="mat-layout-grid">
	<div class="mat-layout-grid-inner">
		<div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
			<p>
				<MatTextField Label="电话号码" @bind-Value="user.Tel" FullWidth="true" Outlined="true"/>
				<ValidationMessage For="@(() => user.Tel)"/>
			</p>

			<p>
				<MatTextField Label="密码" @bind-Value="user.Password" FullWidth="true" Outlined="true"/>
				<ValidationMessage For="@(() => user.Password)"/>
			</p>

			<p>
				<MatTextField Label="重复密码" @bind-Value="user.ConfirmPassword" FullWidth="true" Outlined="true"/>
				<ValidationMessage For="@(() => user.ConfirmPassword)"/>
			</p>
		</div>

		<div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
		<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
			<MatButton Type="submit" Raised="true">注册</MatButton>
			
		</div>
		<div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
			<MatButton Raised="true" OnClick="Reset">重置</MatButton>
		</div>
		<div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>
		<div class="@messageCssClass mat-layout-grid-cell mat-layout-grid-cell-span-12">
			<span>
				@message
			</span>
		</div>
	</div>

</div>

</EditForm>


@code{

	string message = string.Empty;
	string messageCssClass = string.Empty;

	public void Reset()
	{
		user.ConfirmPassword = string.Empty;
		user.Password = string.Empty;
		user.Tel = string.Empty;
	}

	public UserRegister user = new();

	public async Task HandleRegistration()
	{
		var result = await authservice.Register(user);
		message = result.Message;
		if(result.Success)
		{
			messageCssClass = "text-success";
		}
		else
		{
			messageCssClass = "text-danger";
		}
	}
}
